// CHECKSTYLE:FileLength:off (reason: generated)
// CHECKSTYLE:LineLength:off (reason: generated)
// CHECKSTYLE:MethodLength:off (reason: generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file is generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
 
import java.util.List;
 
import com.datasweep.compatibility.client.ATRow; 
import com.datasweep.compatibility.client.AccessPrivilege;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Response;
import com.datasweep.compatibility.client.Server;
import com.datasweep.compatibility.ui.Time;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;

import com.datasweep.compatibility.client.Error;
import com.rockwell.mes.commons.base.ifc.services.PCContext;
import ... tbd ... // TODO Please specify package name.IMESASOMTrialCarLock;
import ... tbd ... // TODO Please specify package name.IMESGeneratedASOMTrialCarLock;
import ... tbd ... // TODO Please specify package name.MESASOMTrialCarLock;
import ... tbd ... // TODO Please specify package name.MESASOMTrialCarLockFilter;

import com.datasweep.compatibility.client.Order;

/**
 * Generated class definition for application table AS_OM_TrialCarLock.
 * Application table description: null
 */
public class MESGeneratedASOMTrialCarLock extends MESATObject //nl
                                                 implements IMESGeneratedASOMTrialCarLock {


    /** Generated column name */
    public static final String COL_NAME_BSN = "bsn";

    /** Generated column name */
    public static final String COL_NAME_MIX = "mix";

    /** Generated column name */
    public static final String COL_NAME_MODEL = "model";

    /** Generated column name */
    public static final String COL_NAME_ORDER = "order";

    /** Generated field definition */
    private Order valOrder;

    /** Generated flag to remember if a transient value was explicitly set */
    private boolean isTransientOrderSet;
    
    /** Generated column name */
    public static final String COL_NAME_ORDERNUMBER = "order_number";

    /** Generated column name */
    public static final String COL_NAME_STATUS = "status";

    /** Generated column name */
    public static final String COL_NAME_USER = "user";

    /** Generated column name */
    public static final String COL_NAME_VIN = "vin";

    @Override
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }
    
    /**
     * Generated constructor
     *
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedASOMTrialCarLock(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     *
     * @param source The source to copy.
     */
    public MESGeneratedASOMTrialCarLock(MESGeneratedASOMTrialCarLock source) {
        super(source);

        this.valOrder = source.valOrder;
        this.isTransientOrderSet = source.isTransientOrderSet;
    }

    /**
     * Generated constructor
     *
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedASOMTrialCarLock(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedASOMTrialCarLock() {
        super();
    }

    /**
     * Generated method definition
     *
     * @param server The Server object
     * @return the filter object
     */
    public static MESASOMTrialCarLockFilter createFilter(Server server) {
        return new MESASOMTrialCarLockFilter(server);
    }

    /**
     * Generated method definition
     *
     * @return the filter object
     */
    public static MESASOMTrialCarLockFilter createFilter() {
        return new MESASOMTrialCarLockFilter();
    }

    /**
     * Generated method definition
     *
     * @param filter the Filter object
     * @return the list of the objects
     */
    public static List<IMESASOMTrialCarLock> getFilteredObjects(MESASOMTrialCarLockFilter filter) {
        return MESATObject.getFilteredMESATObjectList(filter, MESASOMTrialCarLock.class);
    }

    @Override
    public boolean refresh() {
        boolean ok = super.refresh();
        if (!ok) {
            return false;
        }

        this.valOrder = null;
        this.isTransientOrderSet = false;
        
        return true;
    }    

    @Override
    public String getBsn() {
        return (String) this.dgtATRow.getValue(COL_NAME_BSN);
    }

    @Override
    public void setBsn(String value) {
        String oldValue = this.getBsn();
        this.dgtATRow.setValue(COL_NAME_BSN, value);
        pcs.firePropertyChange(PROP_NAME_BSN, oldValue, value);
    }

    @Override
    public String getMix() {
        return (String) this.dgtATRow.getValue(COL_NAME_MIX);
    }

    @Override
    public void setMix(String value) {
        String oldValue = this.getMix();
        this.dgtATRow.setValue(COL_NAME_MIX, value);
        pcs.firePropertyChange(PROP_NAME_MIX, oldValue, value);
    }

    @Override
    public String getModel() {
        return (String) this.dgtATRow.getValue(COL_NAME_MODEL);
    }

    @Override
    public void setModel(String value) {
        String oldValue = this.getModel();
        this.dgtATRow.setValue(COL_NAME_MODEL, value);
        pcs.firePropertyChange(PROP_NAME_MODEL, oldValue, value);
    }

    @Override
    public Order getOrder() {
        if (this.isTransientOrderSet) {
            return this.valOrder;
        }
        final Long key = (Long) this.dgtATRow.getValue(COL_NAME_ORDER);
        if (key == null) {
            this.valOrder = null;
        } else if (this.valOrder == null || this.valOrder.getKey() != key.longValue()) {
            this.valOrder = (Order) this.dgtATRow.getKeyed(COL_NAME_ORDER).getResult();
        }
        return this.valOrder;
    }

    @Override
    public void setOrder(Order value) {
        if (value != null && !this.isTransientOrderSet) {
            Long oldKey = (Long) this.dgtATRow.getValue(COL_NAME_ORDER);
            if (oldKey != null && oldKey.longValue() == value.getKey()) {
                this.valOrder = value;
                return;
            }
        }
            
        Order oldValue = getOrder();
        this.valOrder = value;
        if (value != null && value.isNew()) {
            this.isTransientOrderSet = true;
        } else {
            storeCachedOrderValueInATRow();
        }
        pcs.firePropertyChange(PROP_NAME_ORDER, oldValue, value);
    }

    /**
     * Stores a cached (non-transient) order value in the ATRow.
     */
    private void storeCachedOrderValueInATRow() {
        this.dgtATRow.setValue(COL_NAME_ORDER, this.valOrder);
        this.isTransientOrderSet = false;
    }

    @Override
    public String getOrdernumber() {
        return (String) this.dgtATRow.getValue(COL_NAME_ORDERNUMBER);
    }

    @Override
    public void setOrdernumber(String value) {
        String oldValue = this.getOrdernumber();
        this.dgtATRow.setValue(COL_NAME_ORDERNUMBER, value);
        pcs.firePropertyChange(PROP_NAME_ORDERNUMBER, oldValue, value);
    }

    @Override
    public String getStatus() {
        return (String) this.dgtATRow.getValue(COL_NAME_STATUS);
    }

    @Override
    public void setStatus(String value) {
        String oldValue = this.getStatus();
        this.dgtATRow.setValue(COL_NAME_STATUS, value);
        pcs.firePropertyChange(PROP_NAME_STATUS, oldValue, value);
    }

    @Override
    public String getUser() {
        return (String) this.dgtATRow.getValue(COL_NAME_USER);
    }

    @Override
    public void setUser(String value) {
        String oldValue = this.getUser();
        this.dgtATRow.setValue(COL_NAME_USER, value);
        pcs.firePropertyChange(PROP_NAME_USER, oldValue, value);
    }

    @Override
    public String getVin() {
        return (String) this.dgtATRow.getValue(COL_NAME_VIN);
    }

    @Override
    public void setVin(String value) {
        String oldValue = this.getVin();
        this.dgtATRow.setValue(COL_NAME_VIN, value);
        pcs.firePropertyChange(PROP_NAME_VIN, oldValue, value);
    }

    // CHECKSTYLE:MethodNameCheck:off
    @Override
    public void Save(Time time, String comment, AccessPrivilege accessPrivilege) throws DatasweepException {
        // Check if attached reference is valid:
        Response res = new Response();
        if (this.isTransientOrderSet && this.valOrder != null && this.valOrder.isNew()) {
            Exception e = new Exception("Given order (data type Order) has no valid key.");
            Error err = new Error(e, PCContext.getServerImpl());
            res.addError(err);
        } else if (this.isTransientOrderSet) {
            storeCachedOrderValueInATRow();
        }
        if (res.isError()) {
            throw new DatasweepException(res);
        }
        // okay, save here.
        super.Save(time, comment, accessPrivilege);
    }
     // CHECKSTYLE:MethodNameCheck:on
     
}
