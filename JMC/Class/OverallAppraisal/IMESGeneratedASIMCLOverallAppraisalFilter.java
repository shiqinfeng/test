// CHECKSTYLE:FileLength:off (reason:generated)
// CHECKSTYLE:LineLength:off (reason:generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.DatasweepException;
import com.rockwell.mes.commons.base.ifc.objects.IMESATObjectFilter;

import ... tbd ... // TODO Please specify package name.IMESASIMCLOverallAppraisal;
import ... tbd ... // TODO Please specify package name.IMESASIMCLOverallAppraisalFilter;


/**
 * Generated filter interface for application table AS_IM_CL_OverallAppraisal.
 * @ftps.exclude 
 */
public interface IMESGeneratedASIMCLOverallAppraisalFilter extends IMESATObjectFilter  {

    /**
     * Generated method definition
     *
     * @return the list of the objects
     */
    public List<IMESASIMCLOverallAppraisal> getFilteredObjects();

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZlinenoContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZlinenoEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZlinenoNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZlinenoStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZoverallresultContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZoverallresultEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZoverallresultNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZoverallresultStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZplantContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZplantEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZplantNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZplantStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZvinContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZvinEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZvinNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMCLOverallAppraisalFilter forZvinStartingWith(String value) throws DatasweepException;
}
