// CHECKSTYLE:FileLength:off (reason: generated)
// CHECKSTYLE:LineLength:off (reason: generated)
// CHECKSTYLE:MethodLength:off (reason: generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file is generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
 
import java.util.List;
 
import com.datasweep.compatibility.client.ATRow; 
import com.datasweep.compatibility.client.AccessPrivilege;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Response;
import com.datasweep.compatibility.client.Server;
import com.datasweep.compatibility.ui.Time;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;

import ... tbd ... // TODO Please specify package name.IMESASIMOilFillingResult;
import ... tbd ... // TODO Please specify package name.IMESGeneratedASIMOilFillingResult;
import ... tbd ... // TODO Please specify package name.MESASIMOilFillingResult;
import ... tbd ... // TODO Please specify package name.MESASIMOilFillingResultFilter;


/**
 * Generated class definition for application table AS_IM_OilFillingResult.
 * Application table description: null
 */
public class MESGeneratedASIMOilFillingResult extends MESATObject //nl
                                                 implements IMESGeneratedASIMOilFillingResult {


    /** Generated column name */
    public static final String COL_NAME_CYCLEFAULT = "cycle_fault";

    /** Generated column name */
    public static final String COL_NAME_CYCLENO = "cycle_no";

    /** Generated column name */
    public static final String COL_NAME_CYCLERESULT = "cycle_result";

    /** Generated column name */
    public static final String COL_NAME_CYCLETIMES = "cycle_time_s";

    /** Generated column name */
    public static final String COL_NAME_DATETIME = "date_time";

    /** Generated column name */
    public static final String COL_NAME_DELTADIFFERPRESSUREB = "delta_differ_pressure_b";

    /** Generated column name */
    public static final String COL_NAME_DELTAPRESSURECHECKB = "delta_pressure_check_b";

    /** Generated column name */
    public static final String COL_NAME_EXPANSIONTANKVOLUMEI = "expansion_tank_volume_i";

    /** Generated column name */
    public static final String COL_NAME_FILLINGPRESSUREVALUEB = "filling_pressure_value_b";

    /** Generated column name */
    public static final String COL_NAME_LOCATION = "location";

    /** Generated column name */
    public static final String COL_NAME_MOBILEUNITNO = "mobile_unit_no";

    /** Generated column name */
    public static final String COL_NAME_MULTIMIXINGVOLUMEI = "multi_mixing_volume_i";

    /** Generated column name */
    public static final String COL_NAME_PAGOILVOLUMEML = "pag_oil_volume_ml";

    /** Generated column name */
    public static final String COL_NAME_PROCESSTYPE = "process_type";

    /** Generated column name */
    public static final String COL_NAME_RES1 = "res1";

    /** Generated column name */
    public static final String COL_NAME_RES2 = "res2";

    /** Generated column name */
    public static final String COL_NAME_RES3 = "res3";

    /** Generated column name */
    public static final String COL_NAME_RES4 = "res4";

    /** Generated column name */
    public static final String COL_NAME_SERIALNUMBER = "serial_number";

    /** Generated column name */
    public static final String COL_NAME_TEMPERATUREVALUEOC = "temperature_value_oc";

    /** Generated column name */
    public static final String COL_NAME_TESTAIRRESIDUALCL = "test_air_residual_cl";

    /** Generated column name */
    public static final String COL_NAME_UNITY = "unity";

    /** Generated column name */
    public static final String COL_NAME_VACUUM1VALUEMB = "vacuum_1_value_mb";

    /** Generated column name */
    public static final String COL_NAME_VACUUMCHECKVALUEMB = "vacuum_check_value_mb";

    /** Generated column name */
    public static final String COL_NAME_VINNO = "vin_no";

    /** Generated column name */
    public static final String COL_NAME_VOLUMEMASSVALUE = "volume_mass_value";

    @Override
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }
    
    /**
     * Generated constructor
     *
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedASIMOilFillingResult(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     *
     * @param source The source to copy.
     */
    public MESGeneratedASIMOilFillingResult(MESGeneratedASIMOilFillingResult source) {
        super(source);
    }

    /**
     * Generated constructor
     *
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedASIMOilFillingResult(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedASIMOilFillingResult() {
        super();
    }

    /**
     * Generated method definition
     *
     * @param server The Server object
     * @return the filter object
     */
    public static MESASIMOilFillingResultFilter createFilter(Server server) {
        return new MESASIMOilFillingResultFilter(server);
    }

    /**
     * Generated method definition
     *
     * @return the filter object
     */
    public static MESASIMOilFillingResultFilter createFilter() {
        return new MESASIMOilFillingResultFilter();
    }

    /**
     * Generated method definition
     *
     * @param filter the Filter object
     * @return the list of the objects
     */
    public static List<IMESASIMOilFillingResult> getFilteredObjects(MESASIMOilFillingResultFilter filter) {
        return MESATObject.getFilteredMESATObjectList(filter, MESASIMOilFillingResult.class);
    }

    @Override
    public boolean refresh() {
        boolean ok = super.refresh();
        if (!ok) {
            return false;
        }
        
        return true;
    }    

    @Override
    public String getCyclefault() {
        return (String) this.dgtATRow.getValue(COL_NAME_CYCLEFAULT);
    }

    @Override
    public void setCyclefault(String value) {
        String oldValue = this.getCyclefault();
        this.dgtATRow.setValue(COL_NAME_CYCLEFAULT, value);
        pcs.firePropertyChange(PROP_NAME_CYCLEFAULT, oldValue, value);
    }

    @Override
    public String getCycleno() {
        return (String) this.dgtATRow.getValue(COL_NAME_CYCLENO);
    }

    @Override
    public void setCycleno(String value) {
        String oldValue = this.getCycleno();
        this.dgtATRow.setValue(COL_NAME_CYCLENO, value);
        pcs.firePropertyChange(PROP_NAME_CYCLENO, oldValue, value);
    }

    @Override
    public String getCycleresult() {
        return (String) this.dgtATRow.getValue(COL_NAME_CYCLERESULT);
    }

    @Override
    public void setCycleresult(String value) {
        String oldValue = this.getCycleresult();
        this.dgtATRow.setValue(COL_NAME_CYCLERESULT, value);
        pcs.firePropertyChange(PROP_NAME_CYCLERESULT, oldValue, value);
    }

    @Override
    public String getCycletimes() {
        return (String) this.dgtATRow.getValue(COL_NAME_CYCLETIMES);
    }

    @Override
    public void setCycletimes(String value) {
        String oldValue = this.getCycletimes();
        this.dgtATRow.setValue(COL_NAME_CYCLETIMES, value);
        pcs.firePropertyChange(PROP_NAME_CYCLETIMES, oldValue, value);
    }

    @Override
    public String getDatetime() {
        return (String) this.dgtATRow.getValue(COL_NAME_DATETIME);
    }

    @Override
    public void setDatetime(String value) {
        String oldValue = this.getDatetime();
        this.dgtATRow.setValue(COL_NAME_DATETIME, value);
        pcs.firePropertyChange(PROP_NAME_DATETIME, oldValue, value);
    }

    @Override
    public String getDeltadifferpressureb() {
        return (String) this.dgtATRow.getValue(COL_NAME_DELTADIFFERPRESSUREB);
    }

    @Override
    public void setDeltadifferpressureb(String value) {
        String oldValue = this.getDeltadifferpressureb();
        this.dgtATRow.setValue(COL_NAME_DELTADIFFERPRESSUREB, value);
        pcs.firePropertyChange(PROP_NAME_DELTADIFFERPRESSUREB, oldValue, value);
    }

    @Override
    public String getDeltapressurecheckb() {
        return (String) this.dgtATRow.getValue(COL_NAME_DELTAPRESSURECHECKB);
    }

    @Override
    public void setDeltapressurecheckb(String value) {
        String oldValue = this.getDeltapressurecheckb();
        this.dgtATRow.setValue(COL_NAME_DELTAPRESSURECHECKB, value);
        pcs.firePropertyChange(PROP_NAME_DELTAPRESSURECHECKB, oldValue, value);
    }

    @Override
    public String getExpansiontankvolumei() {
        return (String) this.dgtATRow.getValue(COL_NAME_EXPANSIONTANKVOLUMEI);
    }

    @Override
    public void setExpansiontankvolumei(String value) {
        String oldValue = this.getExpansiontankvolumei();
        this.dgtATRow.setValue(COL_NAME_EXPANSIONTANKVOLUMEI, value);
        pcs.firePropertyChange(PROP_NAME_EXPANSIONTANKVOLUMEI, oldValue, value);
    }

    @Override
    public String getFillingpressurevalueb() {
        return (String) this.dgtATRow.getValue(COL_NAME_FILLINGPRESSUREVALUEB);
    }

    @Override
    public void setFillingpressurevalueb(String value) {
        String oldValue = this.getFillingpressurevalueb();
        this.dgtATRow.setValue(COL_NAME_FILLINGPRESSUREVALUEB, value);
        pcs.firePropertyChange(PROP_NAME_FILLINGPRESSUREVALUEB, oldValue, value);
    }

    @Override
    public String getLocation() {
        return (String) this.dgtATRow.getValue(COL_NAME_LOCATION);
    }

    @Override
    public void setLocation(String value) {
        String oldValue = this.getLocation();
        this.dgtATRow.setValue(COL_NAME_LOCATION, value);
        pcs.firePropertyChange(PROP_NAME_LOCATION, oldValue, value);
    }

    @Override
    public String getMobileunitno() {
        return (String) this.dgtATRow.getValue(COL_NAME_MOBILEUNITNO);
    }

    @Override
    public void setMobileunitno(String value) {
        String oldValue = this.getMobileunitno();
        this.dgtATRow.setValue(COL_NAME_MOBILEUNITNO, value);
        pcs.firePropertyChange(PROP_NAME_MOBILEUNITNO, oldValue, value);
    }

    @Override
    public String getMultimixingvolumei() {
        return (String) this.dgtATRow.getValue(COL_NAME_MULTIMIXINGVOLUMEI);
    }

    @Override
    public void setMultimixingvolumei(String value) {
        String oldValue = this.getMultimixingvolumei();
        this.dgtATRow.setValue(COL_NAME_MULTIMIXINGVOLUMEI, value);
        pcs.firePropertyChange(PROP_NAME_MULTIMIXINGVOLUMEI, oldValue, value);
    }

    @Override
    public String getPagoilvolumeml() {
        return (String) this.dgtATRow.getValue(COL_NAME_PAGOILVOLUMEML);
    }

    @Override
    public void setPagoilvolumeml(String value) {
        String oldValue = this.getPagoilvolumeml();
        this.dgtATRow.setValue(COL_NAME_PAGOILVOLUMEML, value);
        pcs.firePropertyChange(PROP_NAME_PAGOILVOLUMEML, oldValue, value);
    }

    @Override
    public String getProcesstype() {
        return (String) this.dgtATRow.getValue(COL_NAME_PROCESSTYPE);
    }

    @Override
    public void setProcesstype(String value) {
        String oldValue = this.getProcesstype();
        this.dgtATRow.setValue(COL_NAME_PROCESSTYPE, value);
        pcs.firePropertyChange(PROP_NAME_PROCESSTYPE, oldValue, value);
    }

    @Override
    public String getRes1() {
        return (String) this.dgtATRow.getValue(COL_NAME_RES1);
    }

    @Override
    public void setRes1(String value) {
        String oldValue = this.getRes1();
        this.dgtATRow.setValue(COL_NAME_RES1, value);
        pcs.firePropertyChange(PROP_NAME_RES1, oldValue, value);
    }

    @Override
    public String getRes2() {
        return (String) this.dgtATRow.getValue(COL_NAME_RES2);
    }

    @Override
    public void setRes2(String value) {
        String oldValue = this.getRes2();
        this.dgtATRow.setValue(COL_NAME_RES2, value);
        pcs.firePropertyChange(PROP_NAME_RES2, oldValue, value);
    }

    @Override
    public String getRes3() {
        return (String) this.dgtATRow.getValue(COL_NAME_RES3);
    }

    @Override
    public void setRes3(String value) {
        String oldValue = this.getRes3();
        this.dgtATRow.setValue(COL_NAME_RES3, value);
        pcs.firePropertyChange(PROP_NAME_RES3, oldValue, value);
    }

    @Override
    public String getRes4() {
        return (String) this.dgtATRow.getValue(COL_NAME_RES4);
    }

    @Override
    public void setRes4(String value) {
        String oldValue = this.getRes4();
        this.dgtATRow.setValue(COL_NAME_RES4, value);
        pcs.firePropertyChange(PROP_NAME_RES4, oldValue, value);
    }

    @Override
    public String getSerialnumber() {
        return (String) this.dgtATRow.getValue(COL_NAME_SERIALNUMBER);
    }

    @Override
    public void setSerialnumber(String value) {
        String oldValue = this.getSerialnumber();
        this.dgtATRow.setValue(COL_NAME_SERIALNUMBER, value);
        pcs.firePropertyChange(PROP_NAME_SERIALNUMBER, oldValue, value);
    }

    @Override
    public String getTemperaturevalueoc() {
        return (String) this.dgtATRow.getValue(COL_NAME_TEMPERATUREVALUEOC);
    }

    @Override
    public void setTemperaturevalueoc(String value) {
        String oldValue = this.getTemperaturevalueoc();
        this.dgtATRow.setValue(COL_NAME_TEMPERATUREVALUEOC, value);
        pcs.firePropertyChange(PROP_NAME_TEMPERATUREVALUEOC, oldValue, value);
    }

    @Override
    public String getTestairresidualcl() {
        return (String) this.dgtATRow.getValue(COL_NAME_TESTAIRRESIDUALCL);
    }

    @Override
    public void setTestairresidualcl(String value) {
        String oldValue = this.getTestairresidualcl();
        this.dgtATRow.setValue(COL_NAME_TESTAIRRESIDUALCL, value);
        pcs.firePropertyChange(PROP_NAME_TESTAIRRESIDUALCL, oldValue, value);
    }

    @Override
    public String getUnity() {
        return (String) this.dgtATRow.getValue(COL_NAME_UNITY);
    }

    @Override
    public void setUnity(String value) {
        String oldValue = this.getUnity();
        this.dgtATRow.setValue(COL_NAME_UNITY, value);
        pcs.firePropertyChange(PROP_NAME_UNITY, oldValue, value);
    }

    @Override
    public String getVacuum1valuemb() {
        return (String) this.dgtATRow.getValue(COL_NAME_VACUUM1VALUEMB);
    }

    @Override
    public void setVacuum1valuemb(String value) {
        String oldValue = this.getVacuum1valuemb();
        this.dgtATRow.setValue(COL_NAME_VACUUM1VALUEMB, value);
        pcs.firePropertyChange(PROP_NAME_VACUUM1VALUEMB, oldValue, value);
    }

    @Override
    public String getVacuumcheckvaluemb() {
        return (String) this.dgtATRow.getValue(COL_NAME_VACUUMCHECKVALUEMB);
    }

    @Override
    public void setVacuumcheckvaluemb(String value) {
        String oldValue = this.getVacuumcheckvaluemb();
        this.dgtATRow.setValue(COL_NAME_VACUUMCHECKVALUEMB, value);
        pcs.firePropertyChange(PROP_NAME_VACUUMCHECKVALUEMB, oldValue, value);
    }

    @Override
    public String getVinno() {
        return (String) this.dgtATRow.getValue(COL_NAME_VINNO);
    }

    @Override
    public void setVinno(String value) {
        String oldValue = this.getVinno();
        this.dgtATRow.setValue(COL_NAME_VINNO, value);
        pcs.firePropertyChange(PROP_NAME_VINNO, oldValue, value);
    }

    @Override
    public String getVolumemassvalue() {
        return (String) this.dgtATRow.getValue(COL_NAME_VOLUMEMASSVALUE);
    }

    @Override
    public void setVolumemassvalue(String value) {
        String oldValue = this.getVolumemassvalue();
        this.dgtATRow.setValue(COL_NAME_VOLUMEMASSVALUE, value);
        pcs.firePropertyChange(PROP_NAME_VOLUMEMASSVALUE, oldValue, value);
    }

    // CHECKSTYLE:MethodNameCheck:off
    @Override
    public void Save(Time time, String comment, AccessPrivilege accessPrivilege) throws DatasweepException {
        // Check if attached reference is valid:
        Response res = new Response();
        if (res.isError()) {
            throw new DatasweepException(res);
        }
        // okay, save here.
        super.Save(time, comment, accessPrivilege);
    }
     // CHECKSTYLE:MethodNameCheck:on
     
}
