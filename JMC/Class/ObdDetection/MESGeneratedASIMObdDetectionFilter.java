// CHECKSTYLE:FileLength:off (reason: generated)
// CHECKSTYLE:LineLength:off (reason: generated)
// CHECKSTYLE:MethodLength:off (reason: generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.ATRowFilter;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.services.PCContext;

import ... tbd ... // TODO Please specify package name.IMESASIMObdDetection;
import ... tbd ... // TODO Please specify package name.IMESASIMObdDetectionFilter;
import ... tbd ... // TODO Please specify package name.IMESGeneratedASIMObdDetectionFilter;
import ... tbd ... // TODO Please specify package name.MESASIMObdDetection;


/**
 * Generated filter class for application table AS_IM_ObdDetection.
 */
public class MESGeneratedASIMObdDetectionFilter extends ATRowFilter implements IMESGeneratedASIMObdDetectionFilter {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "AS_IM_ObdDetection";

    /**
     * Generated constructor
     *
     * @param server The Server object
     */
    public MESGeneratedASIMObdDetectionFilter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedASIMObdDetectionFilter() {
        this(PCContext.getServerImpl());
    }

    @Override
    public List<IMESASIMObdDetection> getFilteredObjects() {
        return MESATObject.getFilteredMESATObjectList(this, MESASIMObdDetection.class);
    }

    @Override
    public IMESASIMObdDetectionFilter forApassContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_APASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forApassEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_APASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forApassNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_APASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forApassStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_APASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCalidContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_CALID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCalidEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_CALID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCalidNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_CALID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCalidStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_CALID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCvnContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_CVN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCvnEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_CVN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCvnNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_CVN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forCvnStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_CVN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forJcxtnoContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_JCXTNO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forJcxtnoEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_JCXTNO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forJcxtnoNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_JCXTNO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forJcxtnoStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_JCXTNO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forModuleidContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_MODULEID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forModuleidEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_MODULEID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forModuleidNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_MODULEID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forModuleidStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_MODULEID, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forObdContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_OBD, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forObdEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_OBD, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forObdNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_OBD, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forObdStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_OBD, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOdoContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_ODO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOdoEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_ODO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOdoNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_ODO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOdoStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_ODO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOpassContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_OPASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOpassEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_OPASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOpassNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_OPASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOpassStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_OPASS, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOtestdateContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_OTESTDATE, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOtestdateEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_OTESTDATE, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOtestdateNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_OTESTDATE, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forOtestdateStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_OTESTDATE, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forResultContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_RESULT, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forResultEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_RESULT, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forResultNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_RESULT, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forResultStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_RESULT, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forVinContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_VIN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forVinEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_VIN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forVinNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_VIN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forVinStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_VIN, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZlinenoContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZlinenoEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZlinenoNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZlinenoStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZplantContaining(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameContaining(MESGeneratedASIMObdDetection.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZplantEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMObdDetection.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZplantNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMObdDetection.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMObdDetectionFilter forZplantStartingWith(String value) throws DatasweepException {
        return (IMESASIMObdDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMObdDetection.COL_NAME_ZPLANT, value);
    }
}
