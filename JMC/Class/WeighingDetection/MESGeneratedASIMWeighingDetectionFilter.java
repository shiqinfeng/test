// CHECKSTYLE:FileLength:off (reason: generated)
// CHECKSTYLE:LineLength:off (reason: generated)
// CHECKSTYLE:MethodLength:off (reason: generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.ATRowFilter;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.services.PCContext;

import ... tbd ... // TODO Please specify package name.IMESASIMWeighingDetection;
import ... tbd ... // TODO Please specify package name.IMESASIMWeighingDetectionFilter;
import ... tbd ... // TODO Please specify package name.IMESGeneratedASIMWeighingDetectionFilter;
import ... tbd ... // TODO Please specify package name.MESASIMWeighingDetection;


/**
 * Generated filter class for application table AS_IM_WeighingDetection.
 */
public class MESGeneratedASIMWeighingDetectionFilter extends ATRowFilter implements IMESGeneratedASIMWeighingDetectionFilter {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "AS_IM_WeighingDetection";

    /**
     * Generated constructor
     *
     * @param server The Server object
     */
    public MESGeneratedASIMWeighingDetectionFilter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedASIMWeighingDetectionFilter() {
        this(PCContext.getServerImpl());
    }

    @Override
    public List<IMESASIMWeighingDetection> getFilteredObjects() {
        return MESATObject.getFilteredMESATObjectList(this, MESASIMWeighingDetection.class);
    }

    @Override
    public IMESASIMWeighingDetectionFilter forZlinenoContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZlinenoEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZlinenoNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZlinenoStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZoverallresultContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZoverallresultEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZoverallresultNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZoverallresultStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZplantContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZplantEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZplantNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZplantStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZvinContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZvinEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZvinNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZvinStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfaContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfaEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfaNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfaStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightflContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightflEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightflNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightflStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfrContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFR, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfrEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFR, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfrNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFR, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightfrStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTFR, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightraContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightraEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightraNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightraStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRA, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrlContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrlEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrlNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrlStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRL, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrrContaining(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameContaining(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRR, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrrEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRR, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrrNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameNotEqualTo(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRR, value);
    }
    @Override
    public IMESASIMWeighingDetectionFilter forZweightrrStartingWith(String value) throws DatasweepException {
        return (IMESASIMWeighingDetectionFilter) forColumnNameStartingWith(MESGeneratedASIMWeighingDetection.COL_NAME_ZWEIGHTRR, value);
    }
}
