// CHECKSTYLE:FileLength:off (reason: generated)
// CHECKSTYLE:LineLength:off (reason: generated)
// CHECKSTYLE:MethodLength:off (reason: generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.ATRowFilter;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.services.PCContext;

import ... tbd ... // TODO Please specify package name.IMESASIMCAFwdemarcate;
import ... tbd ... // TODO Please specify package name.IMESASIMCAFwdemarcateFilter;
import ... tbd ... // TODO Please specify package name.IMESGeneratedASIMCAFwdemarcateFilter;
import ... tbd ... // TODO Please specify package name.MESASIMCAFwdemarcate;


/**
 * Generated filter class for application table AS_IM_CA_Fwdemarcate.
 */
public class MESGeneratedASIMCAFwdemarcateFilter extends ATRowFilter implements IMESGeneratedASIMCAFwdemarcateFilter {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "AS_IM_CA_Fwdemarcate";

    /**
     * Generated constructor
     *
     * @param server The Server object
     */
    public MESGeneratedASIMCAFwdemarcateFilter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedASIMCAFwdemarcateFilter() {
        this(PCContext.getServerImpl());
    }

    @Override
    public List<IMESASIMCAFwdemarcate> getFilteredObjects() {
        return MESATObject.getFilteredMESATObjectList(this, MESASIMCAFwdemarcate.class);
    }

    @Override
    public IMESASIMCAFwdemarcateFilter forEpsContaining(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameContaining(MESGeneratedASIMCAFwdemarcate.COL_NAME_EPS, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forEpsEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_EPS, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forEpsNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameNotEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_EPS, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forEpsStartingWith(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameStartingWith(MESGeneratedASIMCAFwdemarcate.COL_NAME_EPS, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forEspContaining(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameContaining(MESGeneratedASIMCAFwdemarcate.COL_NAME_ESP, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forEspEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ESP, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forEspNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameNotEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ESP, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forEspStartingWith(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameStartingWith(MESGeneratedASIMCAFwdemarcate.COL_NAME_ESP, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZlinenoContaining(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameContaining(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZlinenoEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZlinenoNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameNotEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZlinenoStartingWith(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameStartingWith(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZoverallresultContaining(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameContaining(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZoverallresultEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZoverallresultNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameNotEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZoverallresultStartingWith(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameStartingWith(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZOVERALLRESULT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZplantContaining(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameContaining(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZplantEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZplantNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameNotEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZplantStartingWith(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameStartingWith(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZvinContaining(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameContaining(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZvinEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZvinNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameNotEqualTo(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMCAFwdemarcateFilter forZvinStartingWith(String value) throws DatasweepException {
        return (IMESASIMCAFwdemarcateFilter) forColumnNameStartingWith(MESGeneratedASIMCAFwdemarcate.COL_NAME_ZVIN, value);
    }
}
