// CHECKSTYLE:FileLength:off (reason:generated)
// CHECKSTYLE:LineLength:off (reason:generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.DatasweepException;
import com.rockwell.mes.commons.base.ifc.objects.IMESATObjectFilter;

import ... tbd ... // TODO Please specify package name.IMESASIMTorqueResult;
import ... tbd ... // TODO Please specify package name.IMESASIMTorqueResultFilter;

import com.datasweep.compatibility.ui.Time;

/**
 * Generated filter interface for application table AS_IM_TorqueResult.
 * @ftps.exclude 
 */
public interface IMESGeneratedASIMTorqueResultFilter extends IMESATObjectFilter  {

    /**
     * Generated method definition
     *
     * @return the list of the objects
     */
    public List<IMESASIMTorqueResult> getFilteredObjects();

    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forAttemptContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forAttemptEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forAttemptNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forAttemptStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forBoltstatusContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forBoltstatusEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forBoltstatusNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forBoltstatusStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFasteningdescContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFasteningdescEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFasteningdescNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFasteningdescStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinalanglea4Containing(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinalanglea4EqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinalanglea4NotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinalanglea4StartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinaltorquet4Containing(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinaltorquet4EqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinaltorquet4NotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forFinaltorquet4StartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forLineContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forLineEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forLineNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forLineStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxfinalanglea4hlContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxfinalanglea4hlEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxfinalanglea4hlNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxfinalanglea4hlStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxtorquet4Containing(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxtorquet4EqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxtorquet4NotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMaxtorquet4StartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMinanglea4llContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMinanglea4llEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMinanglea4llNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMinanglea4llStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMintorquet4Containing(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMintorquet4EqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMintorquet4NotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forMintorquet4StartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forNutrunnerContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forNutrunnerEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forNutrunnerNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forNutrunnerStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forParameterContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forParameterEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forParameterNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forParameterStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forPlantContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forPlantEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forPlantNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forPlantStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendstatusContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendstatusEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendstatusNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendstatusStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendtimeEqualTo(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendtimeGreaterThanOrEqualTo(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendtimeLessThan(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSendtimeNotEqualTo(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSocketContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSocketEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSocketNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forSocketStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forStationContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forStationEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forStationNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forStationStartingWith(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forTimestampEqualTo(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forTimestampGreaterThanOrEqualTo(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forTimestampLessThan(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forTimestampNotEqualTo(Time value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forVinContaining(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forVinEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forVinNotEqualTo(String value) throws DatasweepException;
    /**
     * Generated method definition
     *
     * @param value the value to be filtered for
     * @return the filter object
     * @throws DatasweepException thrown when error occurs
     */
    public IMESASIMTorqueResultFilter forVinStartingWith(String value) throws DatasweepException;
}
