// CHECKSTYLE:FileLength:off (reason: generated)
// CHECKSTYLE:LineLength:off (reason: generated)
// CHECKSTYLE:MethodLength:off (reason: generated)
package ... tbd ... // TODO Please specify package name;

/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */
import java.util.List;

import com.datasweep.compatibility.client.ATRowFilter;
import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.Server;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.services.PCContext;

import ... tbd ... // TODO Please specify package name.IMESASIMCLEquipmentBeat;
import ... tbd ... // TODO Please specify package name.IMESASIMCLEquipmentBeatFilter;
import ... tbd ... // TODO Please specify package name.IMESGeneratedASIMCLEquipmentBeatFilter;
import ... tbd ... // TODO Please specify package name.MESASIMCLEquipmentBeat;


/**
 * Generated filter class for application table AS_IM_CL_EquipmentBeat.
 */
public class MESGeneratedASIMCLEquipmentBeatFilter extends ATRowFilter implements IMESGeneratedASIMCLEquipmentBeatFilter {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "AS_IM_CL_EquipmentBeat";

    /**
     * Generated constructor
     *
     * @param server The Server object
     */
    public MESGeneratedASIMCLEquipmentBeatFilter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedASIMCLEquipmentBeatFilter() {
        this(PCContext.getServerImpl());
    }

    @Override
    public List<IMESASIMCLEquipmentBeat> getFilteredObjects() {
        return MESATObject.getFilteredMESATObjectList(this, MESASIMCLEquipmentBeat.class);
    }

    @Override
    public IMESASIMCLEquipmentBeatFilter forCycletimeContaining(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameContaining(MESGeneratedASIMCLEquipmentBeat.COL_NAME_CYCLETIME, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forCycletimeEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_CYCLETIME, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forCycletimeNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameNotEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_CYCLETIME, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forCycletimeStartingWith(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameStartingWith(MESGeneratedASIMCLEquipmentBeat.COL_NAME_CYCLETIME, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZequipnoContaining(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameContaining(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZEQUIPNO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZequipnoEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZEQUIPNO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZequipnoNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameNotEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZEQUIPNO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZequipnoStartingWith(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameStartingWith(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZEQUIPNO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZlinenoContaining(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameContaining(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZlinenoEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZlinenoNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameNotEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZlinenoStartingWith(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameStartingWith(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZLINENO, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZplantContaining(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameContaining(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZplantEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZplantNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameNotEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZplantStartingWith(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameStartingWith(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZPLANT, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZvinContaining(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameContaining(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZvinEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZvinNotEqualTo(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameNotEqualTo(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZVIN, value);
    }
    @Override
    public IMESASIMCLEquipmentBeatFilter forZvinStartingWith(String value) throws DatasweepException {
        return (IMESASIMCLEquipmentBeatFilter) forColumnNameStartingWith(MESGeneratedASIMCLEquipmentBeat.COL_NAME_ZVIN, value);
    }
}
